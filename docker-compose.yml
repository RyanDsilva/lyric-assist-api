version: '3.8'

networks:
  lyric-assist: {
    driver: bridge
  }

volumes:
  esdata:

services:
  redis:
    container_name: redis-container
    image: redis:7.0.11
    ports:
      - "6379:6379"
    restart: always
    networks:
      - lyric-assist

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - logger.level=ERROR
    networks:
      - lyric-assist
    ports:
      - 9200:9200


  kibana:
    container_name: kibana-container
    image: docker.elastic.co/kibana/kibana:8.8.1
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    networks:
      - lyric-assist
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  api-reverse-proxy:
    container_name: api-reverse-proxy
    build:
      context: ./api-reverse-proxy/
    volumes:
      - ./api-reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8081:8081"
    networks:
      - lyric-assist
    depends_on:
      - graph-gateway
      - users-subgraph
      - songs-subgraph

  graph-gateway:
    container_name: graph-gateway
    build: 
      context: ./
      dockerfile: Dockerfile
    command: "node-dev --inspect=0.0.0.0:9229 dist/index.js"
    volumes:
      - .:/app
    working_dir: /app/services/graph-gateway
    restart: always
    networks:
      - lyric-assist
    env_file: .env
    environment:
      - PORT=3000
      - SERVICE_NAME=graph-gateway
    expose:
      - "3000"
    ports:
      - "19000:9229"
    tty: true
    depends_on:
      - users-subgraph
      - songs-subgraph

  users-subgraph:
    container_name: users-subgraph
    build: 
      context: ./
      dockerfile: Dockerfile
    command: "node-dev --inspect=0.0.0.0:9229 dist/index.js"
    volumes:
      - .:/app
    working_dir: /app/services/users-subgraph
    restart: always
    networks:
      - lyric-assist
    env_file: .env
    environment:
      - PORT=3000
      - SERVICE_NAME=users-subgraph
    expose:
      - "3000"
    ports:
      - "19001:9229"
    tty: true
    depends_on:
      - redis
      - elasticsearch

  songs-subgraph:
    container_name: songs-subgraph
    build: 
      context: ./
      dockerfile: Dockerfile
    command: "node-dev --inspect=0.0.0.0:9229 dist/index.js"
    volumes:
      - .:/app
    working_dir: /app/services/songs-subgraph
    restart: always
    networks:
      - lyric-assist
    env_file: .env
    environment:
      - PORT=3000
      - SERVICE_NAME=songs-subgraph
    expose:
      - "3000"
    ports:
      - "19002:9229"
    tty: true
    depends_on:
      - redis
      - elasticsearch